{"version":3,"sources":["dataArrey.js","App.js","reportWebVitals.js","index.js"],"names":["mockedResponse","App","useState","isLoading","setLoading","serverResponse","setServerResponse","getRates","ms","Promise","resolve","setTimeout","then","data","ratesList","rates","Object","entries","className","onClick","length","map","currency","amount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yJAAaA,G,KAAiB,CAC1B,OAAS,EACT,UAAa,WACb,KAAQ,MACR,MAAS,CACT,IAAO,QACH,IAAO,QACP,IAAO,UACP,IAAO,UACP,IAAO,QACP,IAAO,SACP,IAAO,SACP,IAAO,QACP,IAAO,IACP,IAAO,IACP,IAAO,MACP,IAAO,QACP,IAAO,qBACP,IAAO,SACP,IAAO,QACP,IAAO,OACP,IAAO,UACP,IAAO,EACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,OACP,IAAO,sBACP,IAAO,mBACP,IAAO,SACP,IAAO,QACP,IAAO,QACP,IAAO,OACP,IAAO,OACP,IAAO,OACP,IAAO,QACP,IAAO,MACP,IAAO,QACP,IAAO,UACP,IAAO,EACP,IAAO,OACP,IAAO,UACP,IAAO,SACP,KAAQ,oBACR,IAAO,QACP,IAAO,OACP,IAAO,SACP,IAAO,QACP,IAAO,SACP,IAAO,mBACP,IAAO,QACP,IAAO,oBACP,IAAO,OACP,IAAO,QACP,IAAO,OACP,IAAO,QACP,IAAO,QACP,IAAO,OACP,IAAO,QACP,IAAO,WACP,IAAO,QACP,IAAO,UACP,IAAO,OACP,IAAO,SACP,IAAO,QACP,IAAO,SACP,IAAO,OACP,IAAO,WACP,IAAO,MACP,IAAO,OACP,IAAO,WACP,IAAO,QACP,IAAO,SACP,IAAO,UACP,IAAO,OACP,IAAO,QACP,IAAO,QACP,IAAO,SACP,IAAO,UACP,IAAO,QACP,IAAO,QACP,IAAO,OACP,IAAO,OACP,IAAO,UACP,IAAO,WACP,IAAO,WACP,IAAO,UACP,IAAO,UACP,IAAO,QACP,IAAO,oBACP,IAAO,QACP,IAAO,QACP,IAAO,SACP,IAAO,SACP,IAAO,UACP,IAAO,QACP,IAAO,SACP,IAAO,OACP,IAAO,SACP,IAAO,QACP,IAAO,QACP,IAAO,SACP,IAAO,QACP,IAAO,OACP,IAAO,SACP,IAAO,OACP,IAAO,UACP,IAAO,QACP,IAAO,OACP,IAAO,OACP,IAAO,QACP,IAAO,QACP,IAAO,SACP,IAAO,UACP,IAAO,OACP,IAAO,WACP,IAAO,OACP,IAAO,QACP,IAAO,SACP,IAAO,QACP,IAAO,UACP,IAAO,QACP,IAAO,QACP,IAAO,SACP,IAAO,QACP,IAAO,OACP,IAAO,IACP,IAAO,OACP,IAAO,OACP,IAAO,QACP,IAAO,QACP,IAAO,SACP,IAAO,SACP,IAAO,QACP,IAAO,IACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,SACP,IAAO,SACP,IAAO,SACP,IAAO,UACP,IAAO,EACP,IAAO,SACP,IAAO,UACP,IAAO,SACP,IAAO,UACP,IAAO,oBACP,IAAO,qBACP,IAAO,QACP,IAAO,mBACP,IAAO,UACP,IAAO,kBACP,IAAO,SACP,IAAO,QACP,IAAO,Y,OCpJA,SAASC,IAAO,IAAD,EACMC,oBAAS,GADf,mBACnBC,EADmB,KACRC,EADQ,OAEkBF,mBAAS,IAF3B,mBAEnBG,EAFmB,KAEHC,EAFG,KAIpBC,EAAW,kBARNC,EAQkB,IAPtB,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAQ7CI,MAAK,kBAAMH,QAAQC,QAAQV,MAC3BY,MAAK,SAACC,GAAD,OAAUP,EAAkBO,MAV1C,IAAeL,GAmBLM,EAAYT,EAAeU,OAASC,OAAOC,QAAQZ,EAAeU,OAExE,OAAIZ,EAAkB,yCAGlB,sBAAKe,UAAU,MAAf,UACI,wBAAQA,UAAU,SAASC,QAbT,WACtBf,GAAW,GACXG,IAAWK,MAAK,WACZR,GAAW,OAUX,wBACF,qBAAKc,UAAU,mBAAf,UACY,OAATJ,QAAS,IAATA,OAAA,EAAAA,EAAWM,SAAUN,EAAUO,KAAI,mCAAEC,EAAF,KAAYC,EAAZ,YAChC,sBAAKL,UAAU,eAAf,UACI,8BAAMI,IACN,8BAAMC,MAFyBD,WChCnD,IAYeE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.f746d1ed.chunk.js","sourcesContent":["export const mockedResponse = {\n    \"valid\": true,\n    \"timestamp\": 1582195447,\n    \"base\": \"USD\",\n    \"rates\": {\n    \"AED\": 3.67338,\n        \"AFN\": 77.8079,\n        \"ALL\": 113.23065,\n        \"AMD\": 478.14251,\n        \"ANG\": 1.78845,\n        \"AOA\": 493.9822,\n        \"ARS\": 61.66319,\n        \"AUD\": 1.50684,\n        \"AWG\": 1.8,\n        \"AZN\": 1.7,\n        \"BAM\": 1.811,\n        \"BBD\": 2.01732,\n        \"BCH\": 0.0026295030239284773,\n        \"BDT\": 84.88116,\n        \"BGN\": 1.81119,\n        \"BHD\": 0.37698,\n        \"BIF\": 1883.9902,\n        \"BMD\": 1,\n        \"BND\": 1.39136,\n        \"BOB\": 6.90982,\n        \"BRL\": 4.36582,\n        \"BSD\": 0.99917,\n        \"BTC\": 0.00010430672016906032,\n        \"BTG\": 0.09900990099009901,\n        \"BWP\": 10.99162,\n        \"BZD\": 2.01399,\n        \"CAD\": 1.32493,\n        \"CDF\": 1686.1,\n        \"CHF\": 0.98284,\n        \"CLP\": 796.23,\n        \"CNH\": 7.02971,\n        \"CNY\": 7.029,\n        \"COP\": 3385.67,\n        \"CRC\": 567.00515,\n        \"CUC\": 1,\n        \"CUP\": 0.99899,\n        \"CVE\": 102.10001,\n        \"CZK\": 23.16515,\n        \"DASH\": 0.009672115291614276,\n        \"DJF\": 177.729,\n        \"DKK\": 6.9152,\n        \"DOP\": 53.33415,\n        \"DZD\": 120.936,\n        \"EGP\": 15.59628,\n        \"EOS\": 0.25144581342720645,\n        \"ETB\": 31.8418,\n        \"ETH\": 0.003866976024748646,\n        \"EUR\": 0.92612,\n        \"FJD\": 2.20721,\n        \"GBP\": 0.77471,\n        \"GEL\": 2.82515,\n        \"GHS\": 5.32477,\n        \"GIP\": 0.81292,\n        \"GMD\": 50.8725,\n        \"GNF\": 9519.70895,\n        \"GTQ\": 7.62428,\n        \"GYD\": 208.40372,\n        \"HKD\": 7.7788,\n        \"HNL\": 24.61633,\n        \"HRK\": 6.89836,\n        \"HTG\": 97.52467,\n        \"HUF\": 312.74,\n        \"IDR\": 13810.6405,\n        \"ILS\": 3.433,\n        \"INR\": 71.589,\n        \"IQD\": 1192.91165,\n        \"IRR\": 42107.1,\n        \"ISK\": 127.7165,\n        \"JMD\": 140.87825,\n        \"JOD\": 0.70914,\n        \"JPY\": 111.969,\n        \"KES\": 101.365,\n        \"KGS\": 69.85239,\n        \"KHR\": 4088.4324,\n        \"KMF\": 456.473,\n        \"KRW\": 1204.77,\n        \"KWD\": 0.30657,\n        \"KYD\": 0.83261,\n        \"KZT\": 376.44802,\n        \"LAK\": 8895.31975,\n        \"LBP\": 1510.69955,\n        \"LKR\": 181.84229,\n        \"LRD\": 196.88485,\n        \"LSL\": 14.9805,\n        \"LTC\": 0.014191442560136236,\n        \"LYD\": 1.41237,\n        \"MAD\": 9.73535,\n        \"MDL\": 17.71963,\n        \"MKD\": 57.00696,\n        \"MMK\": 1449.7425,\n        \"MOP\": 7.99818,\n        \"MUR\": 37.80151,\n        \"MVR\": 15.451,\n        \"MWK\": 735.9364,\n        \"MXN\": 18.6494,\n        \"MYR\": 4.18231,\n        \"MZN\": 64.79825,\n        \"NAD\": 14.9805,\n        \"NGN\": 363.52,\n        \"NIO\": 33.70534,\n        \"NOK\": 9.3031,\n        \"NPR\": 114.13431,\n        \"NZD\": 1.57555,\n        \"OMR\": 0.38502,\n        \"PAB\": 0.99919,\n        \"PEN\": 3.38092,\n        \"PGK\": 3.40646,\n        \"PHP\": 50.71804,\n        \"PKR\": 154.11631,\n        \"PLN\": 3.9613,\n        \"PYG\": 6521.64205,\n        \"QAR\": 3.6412,\n        \"RON\": 4.42872,\n        \"RSD\": 108.8855,\n        \"RUB\": 63.7281,\n        \"RWF\": 950.17481,\n        \"SAR\": 3.75094,\n        \"SBD\": 8.23524,\n        \"SCR\": 13.70598,\n        \"SDG\": 52.7525,\n        \"SEK\": 9.8036,\n        \"SGD\": 1.4,\n        \"SLL\": 9720.5,\n        \"SOS\": 585.53,\n        \"SRD\": 7.45835,\n        \"SVC\": 8.74283,\n        \"SZL\": 14.93506,\n        \"THB\": 31.44455,\n        \"TJS\": 9.69119,\n        \"TMT\": 3.5,\n        \"TND\": 2.85165,\n        \"TOP\": 2.31662,\n        \"TRY\": 6.08567,\n        \"TTD\": 6.75088,\n        \"TWD\": 30.32302,\n        \"TZS\": 2309.815,\n        \"UAH\": 24.50375,\n        \"UGX\": 3662.2281,\n        \"USD\": 1,\n        \"UYU\": 37.89638,\n        \"UZS\": 9514.8477,\n        \"VND\": 23237.66,\n        \"XAF\": 607.31356,\n        \"XAG\": 0.054838090537687484,\n        \"XAU\": 0.0006214673465519438,\n        \"XCD\": 2.70269,\n        \"XLM\": 14.204545454545453,\n        \"XOF\": 607.31356,\n        \"XRP\": 3.663003663003663,\n        \"YER\": 250.3625,\n        \"ZAR\": 15.0978,\n        \"ZMW\": 14.66231\n}\n}\n","import { useState } from \"react\";\nimport './App.css';\nimport { mockedResponse } from './dataArrey.js'\n\nfunction delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default function App() {\n    const [isLoading, setLoading] = useState(false);\n    const [serverResponse, setServerResponse] = useState({});\n\n    const getRates = () => delay(2000)\n        .then(() => Promise.resolve(mockedResponse))\n        .then((data) => setServerResponse(data));\n\n    const handleButtonClick = () => {\n        setLoading(true);\n        getRates().then(() => {\n            setLoading(false)\n        })\n    };\n\n    const ratesList = serverResponse.rates && Object.entries(serverResponse.rates);\n\n    if (isLoading) return <h1>Loading</h1>;\n\n    return (\n        <div className=\"App\">\n            <button className=\"button\" onClick={handleButtonClick}>Click Here</button>\n          <div className=\"currency-section\">\n            {ratesList?.length && ratesList.map(([currency, amount]) => (\n                <div className=\"currency-row\" key={currency}>\n                    <div>{currency}</div>\n                    <div>{amount}</div>\n                </div>\n            ))}\n          </div>\n        </div>\n    );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}